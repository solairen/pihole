---
- name: download PiHole backup from Azure
  shell: 'az storage blob download --account-name {{ account }} --container {{ container }} --name pihole.tar.gz --file pihole.tar.gz --account-key "{{ key }}"'
  when: _restore_from_backup.azure == 1
- name: download PiHole backup from Linode
  shell: 's3cmd get s3://{{ _linode_bucket }}/pihole.tar.gz'
  when: _restore_from_backup.linode == 1
- name: download PiHole backup from AWS
  amazon.aws.aws_s3:
    aws_access_key: "{{ _aws_access_key }}"
    aws_secret_key: "{{ _aws_secret_key }}"
    mode: get
    bucket: "{{ _aws_bucket }}"
    object: pihole/pihole.tar.gz
    dest: $HOME/pihole.tar.gz
  when: _restore_from_backup.aws == 1
- name: stop PiHole container
  become: true
  docker_container:
    name: pihole
    state: stopped
- name: remove pihole folder
  become: true
  file:
    path: /var/pihole/pihole
    state: absent
- name: remove dnsmasq.d folder
  become: true
  file:
    path: /var/pihole/dnsmasq.d
    state: absent
- name: unarchive PiHole backup
  unarchive:
    src: $HOME/pihole.tar.gz
    dest: /var/pihole/
    remote_src: true
- name: start PiHole container
  become: true
  docker_container:
    name: pihole
    state: started
- name: check if PiHole is running
  become: true
  docker_container_info:
    name: pihole
  retries: 15
  delay: 3
  register: result
  until: "result.container['State']['Health']['Status'] == 'healthy'"
- name: remove backup from host
  file:
    state: absent
    path: $HOME/pihole.tar.gz
